apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: ghost-blog
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: mysql
          image: mysql:8.0.41
          imagePullPolicy: Always
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "{{ .Values.mysql.rootPassword }}"
            - name: MYSQL_DATABASE
              value: "{{ .Values.mysql.database }}"
            - name: MYSQL_USER
              value: "{{ .Values.mysql.user }}"
            - name: MYSQL_PASSWORD
              value: "{{ .Values.mysql.password }}"
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 999
            readOnlyRootFilesystem: false  # true can break MySQL unless using initContainers for data
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - name: mysql-storage
              mountPath: /var/lib/mysql
          livenessProbe:
            exec:
              command:
                - mysqladmin
                - ping
                - -h
                - 127.0.0.1
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - mysqladmin
                - ping
                - -h
                - 127.0.0.1
            initialDelaySeconds: 10
            periodSeconds: 5
      serviceAccountName: mysql-sa
      automountServiceAccountToken: false
      volumes:
        - name: mysql-storage
          persistentVolumeClaim:
            claimName: mysql-pvc
